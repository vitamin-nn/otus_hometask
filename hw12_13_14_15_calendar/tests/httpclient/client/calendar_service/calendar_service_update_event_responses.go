// Code generated by go-swagger; DO NOT EDIT.

package calendar_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vitamin-nn/otus_hometask/hw12_13_14_15_calendar/tests/httpclient/models"
)

// CalendarServiceUpdateEventReader is a Reader for the CalendarServiceUpdateEvent structure.
type CalendarServiceUpdateEventReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CalendarServiceUpdateEventReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCalendarServiceUpdateEventOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCalendarServiceUpdateEventDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCalendarServiceUpdateEventOK creates a CalendarServiceUpdateEventOK with default headers values
func NewCalendarServiceUpdateEventOK() *CalendarServiceUpdateEventOK {
	return &CalendarServiceUpdateEventOK{}
}

/*CalendarServiceUpdateEventOK handles this case with default header values.

A successful response.
*/
type CalendarServiceUpdateEventOK struct {
	Payload *models.ModifyEventResponse
}

func (o *CalendarServiceUpdateEventOK) Error() string {
	return fmt.Sprintf("[PUT /update][%d] calendarServiceUpdateEventOK  %+v", 200, o.Payload)
}

func (o *CalendarServiceUpdateEventOK) GetPayload() *models.ModifyEventResponse {
	return o.Payload
}

func (o *CalendarServiceUpdateEventOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModifyEventResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCalendarServiceUpdateEventDefault creates a CalendarServiceUpdateEventDefault with default headers values
func NewCalendarServiceUpdateEventDefault(code int) *CalendarServiceUpdateEventDefault {
	return &CalendarServiceUpdateEventDefault{
		_statusCode: code,
	}
}

/*CalendarServiceUpdateEventDefault handles this case with default header values.

An unexpected error response
*/
type CalendarServiceUpdateEventDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the calendar service update event default response
func (o *CalendarServiceUpdateEventDefault) Code() int {
	return o._statusCode
}

func (o *CalendarServiceUpdateEventDefault) Error() string {
	return fmt.Sprintf("[PUT /update][%d] CalendarService_UpdateEvent default  %+v", o._statusCode, o.Payload)
}

func (o *CalendarServiceUpdateEventDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *CalendarServiceUpdateEventDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
