version: "3"

services:
    rabbit:
        container_name: calendar-rabbit
        image: rabbitmq:3.8.7-management-alpine
        env_file:
            - env/rabbit.env
        ports:
            - "5672:5672"
            - "15672:15672"
    db:
        image: postgres:12
        container_name: "calendar-db"
        ports:
            - "5432:5432"
        env_file:
            - env/database.env
        volumes:
            - ../build/db/init.dev.sql:/docker-entrypoint-initdb.d/init.sql
            - database-calendar-data:/var/lib/postgresql/data/
    migration:
        image: calendar/migrate
        container_name: "calendar-migration"
        depends_on:
            - db
        env_file:
            - env/database.env
        environment:
            - POSTGRES_DB_HOST=db
    server:
        image: calendar/server
        restart: always
        container_name: "calendar-server"
        ports:
            - "8081:8081"
            - "8080:8080"
        depends_on:
            - migration
        env_file:
            - env/common.env
            - env/database.env
            - env/server.env
        environment:
            - POSTGRES_DB_HOST=db
    scheduler:
        image: calendar/scheduler
        restart: always
        container_name: "calendar-scheduler"
        depends_on:
            - migration
            - rabbit
        env_file:
            - env/common.env
            - env/rabbit.env
            - env/database.env
            - env/scheduler.env
        environment:
            - POSTGRES_DB_HOST=db
            - RABBITMQ_HOST=rabbit
    sender:
        image: calendar/sender
        restart: always
        container_name: "calendar-sender"
        depends_on:
            - rabbit
        env_file:
            - env/common.env
            - env/rabbit.env
            - env/sender.env
        environment:
            - RABBITMQ_HOST=rabbit
volumes:
    database-calendar-data:
